{"version":3,"sources":["api/api.js","components/UI/Field.jsx","redux/auth/auth.actions.js","redux/auth/auth.types.js","components/Header/LoginForm.jsx","components/Header/Login.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","redux/filters/filters.actions.js","redux/filters/filters.types.js","components/Filters/SortBy.jsx","components/Filters/ResetFilters.jsx","components/Filters/Pagination.jsx","components/Filters/GenresHOC.jsx","components/Filters/Genres.jsx","components/Filters/Filters.jsx","components/UI/Like.jsx","components/UI/Bookmark.jsx","components/UI/MovieImage.jsx","pages/MoviesPage/MovieItem.jsx","components/UI/Loader.jsx","redux/loader/loader.actions.js","redux/loader/loader.types.js","redux/movies/movies.actions.js","redux/movies/movies.types.js","pages/MoviesPage/MoviesHOC.jsx","pages/MoviesPage/MoviesList.jsx","pages/MoviesPage/MoviesPage.jsx","pages/MoviePage/MovieDetails.jsx","pages/MoviePage/MovieVideos.jsx","pages/MoviePage/MovieCredits.jsx","pages/MoviePage/MovieHeader.jsx","pages/MoviePage/MovieNavigation.jsx","pages/MoviePage/MoviePage.jsx","components/App.jsx","redux/loader/loader.reducer.js","utils/cookies.js","redux/auth/auth.reducer.js","redux/movies/movies.reducer.js","redux/filters/filters.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","a","options","fetch","response","status","json","errorJ","reject","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","Field","props","labelText","id","type","name","value","onChange","onBlur","placeholder","error","className","htmlFor","updateAuth","payload","toggleModal","LoginForm","state","username","password","repeatPassword","errors","submitting","e","target","setState","prevState","handleBlur","validateFields","Object","keys","length","onSubmit","base","login","get","requestToken","post","this","request_token","validation","authentication","session_id","user","status_message","onLogin","preventDefault","onClick","disabled","React","Component","mapDispatchToProps","connect","undefined","Login","showModal","Modal","isOpen","toggle","ModalBody","auth","UserMenu","dropdownOpen","toggleDropdown","handleLogout","logout","then","onLogOut","Dropdown","DropdownToggle","tag","data-toggle","aria-expanded","src","avatar","gravatar","hash","alt","DropdownMenu","DropdownItem","Header","href","onChangeFilter","onChangePagination","SortBy","selectOptions","arr","i","push","key","filters","sort_by","primary_release_year","map","option","label","PureComponent","defaultProps","ResetFilters","resetFilters","style","width","Pagination","handleClick","pagination","page","totalPages","composedHOC","compose","with_genres","sorting","onChangeGenres","includes","filter","item","getMoviesGenres","language","data","moviesGenres","genres","Genres","checked","GenresHOC","Filters","Like","like","onToggleLike","onLike","likeState","movie","media_type","media_id","favorite","console","log","Bookmark","bookmark","onToggleBookmark","onBookmark","bookmarkState","MovieImage","path","MovieItem","backdrop_path","poster_path","to","title","vote_average","Loader","Spinner","animation","toggleLoader","getMovies","fetchMovies","dispatch","total_pages","results","movies","isLoading","loader","general","join","_","isEqual","MoviesList","MoviesHOC","MoviesPage","MovieDetails","formatNumber","number","toString","replace","renderCountries","countries","index","renderGenres","renderCompanies","companies","details","release_date","tagline","production_countries","budget","revenue","homepage","runtime","production_companies","Table","isEmpty","MovieVideos","videos","toggleLoaderVideos","match","isLoadingVideos","allow","withRouter","MovieCredits","credits","toggleLoaderCredits","cast","isLoadingCredits","profile_path","character","MovieHeader","original_title","overview","release_year","split","MovieNavigation","Nav","tabs","NavItem","MoviePage","App","updateLogin","exact","component","initialState","toggleLoaderState","loaderKey","action","cookies","Cookies","slice","reducerApp","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","set","maxAge","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f998f783.chunk.js","sourcesContent":["import queryString from \"query-string\"\r\nimport { reject } from \"q\";\r\n\r\nexport const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n\r\nasync function fetchApi(url, options = {}) {\r\n  try {\r\n    let response = await fetch(url, options);\r\n    if (response.status < 400) {\r\n      return response.json();\r\n    } else {\r\n      throw response;\r\n    }\r\n  } catch (error) {\r\n    let errorJ = await error.json();\r\n    return reject(errorJ);\r\n  }\r\n}\r\n\r\nexport default class CallApi {\r\n static get(url, options = {}) {\r\n    const { params } = options;\r\n    const queryStringParams = {\r\n      api_key: API_KEY_3,\r\n      ...params\r\n    }\r\n   return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  }\r\n    )};\r\n\r\n    static post(url, options = {}) {\r\n      const { params, body } = options;\r\n    const queryStringParams = {\r\n      api_key: API_KEY_3,\r\n      ...params\r\n    }\r\n   return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  })\r\n}\r\n\r\nstatic logout(url, options = {}) {\r\n  const { params, body } = options;\r\nconst queryStringParams = {\r\n  api_key: API_KEY_3,\r\n  ...params\r\n}\r\nreturn fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`, {\r\nmethod: \"DELETE\",\r\nmode: \"cors\",\r\nheaders: {\r\n  \"Content-type\": \"application/json\"\r\n},\r\nbody: JSON.stringify(body)\r\n})\r\n}\r\n\r\n}\r\n  \r\n","import React from \"react\";\r\n\r\nconst Field = props => {\r\n  const {\r\n    labelText,\r\n    id,\r\n    type,\r\n    name,\r\n    value,\r\n    onChange,\r\n    onBlur,\r\n    placeholder,\r\n    error\r\n  } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{labelText}</label>\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        className={error ? \"form-control border-danger\" : \"form-control\"}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n      />\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","import CallApi from \"../../api/api\";\r\nimport * as types from \"./auth.types\";\r\n\r\nconst {\r\n  UPDATE_AUTH,\r\n  LOGOUT,\r\n  TOGGLE_MODAL\r\n} = types;\r\n\r\nexport const updateLogin = (session_id) => (dispatch) => {\r\n    return CallApi.get(\"/account\", {\r\n      params: {\r\n        session_id\r\n      }\r\n    }).then(user => dispatch(updateAuth({ user, session_id })));\r\n};\r\n\r\nexport const updateAuth = payload => {\r\n  return {\r\n    type: UPDATE_AUTH,\r\n    payload\r\n  };\r\n};\r\n\r\nexport const onLogOut = () => {\r\n  return {\r\n    type: LOGOUT\r\n  };\r\n};\r\n\r\nexport const toggleModal = () => {\r\n  return {\r\n    type: TOGGLE_MODAL\r\n  };\r\n};","export const UPDATE_AUTH = \"UPDATE_AUTH\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport Field from \"../UI/Field\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateAuth } from \"../../redux/auth/auth.actions\";\r\n\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    errors: {\r\n      username: \"\",\r\n      password: \"\",\r\n      repeatPassword: \"\"\r\n    },\r\n    submitting: false\r\n  };\r\n\r\n  onChange = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevState => ({\r\n      [name]: value,\r\n      errors: {\r\n        ...prevState.errors,\r\n        [name]: \"\"\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleBlur = () => {\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length) {\r\n      this.setState(prevState => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors\r\n        }\r\n      }));\r\n    }\r\n  };\r\n\r\n  validateFields = () => {\r\n    const errors = {};\r\n    const { username, password, repeatPassword } = this.state;\r\n    if (!username) {\r\n      errors.username = \"Username required\";\r\n    }\r\n    if (!password) {\r\n      errors.password = \"Password required\";\r\n    }\r\n    if (repeatPassword !== password) {\r\n      errors.repeatPassword = \"Must be equal password\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState({\r\n      submitting: true,\r\n      errors: {\r\n        base: \"\"\r\n      }\r\n    });\r\n    this.login();\r\n  };\r\n\r\n  login = async function() {\r\n    try {\r\n      let requestToken = await CallApi.get(\"/authentication/token/new\");\r\n      let validation = await CallApi.post(\r\n        \"/authentication/token/validate_with_login\",\r\n        {\r\n          body: {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            request_token: requestToken.request_token\r\n          }\r\n        }\r\n      );\r\n      let authentication = await CallApi.post(\"/authentication/session/new\", {\r\n        body: {\r\n          request_token: validation.request_token\r\n        }\r\n      });\r\n      let user = await CallApi.get(\"/account\", {\r\n        params: {\r\n          session_id: authentication.session_id\r\n        }\r\n      });\r\n      this.props.updateAuth({user: user, session_id: authentication.session_id});\r\n      this.setState({\r\n        submitting: false\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        submitting: false,\r\n        errors: {\r\n          base: error.status_message\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onLogin = e => {\r\n    e.preventDefault();\r\n    const errors = this.validateFields();\r\n    if (Object.keys(errors).length) {\r\n      this.setState(prevState => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors\r\n        }\r\n      }));\r\n    } else {\r\n      this.onSubmit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      repeatPassword,\r\n      errors,\r\n      submitting\r\n    } = this.state;\r\n    return (\r\n      <div className=\"form-login-container\">\r\n        <form className=\"form-login\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n            Авторизация\r\n          </h1>\r\n          <Field\r\n            labelText=\"Пользователь\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"username\"\r\n            placeholder=\"Пользователь (подсказка - Sefre)\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={this.onChange}\r\n            onBlur={this.handleBlur}\r\n            error={errors.username}\r\n          />\r\n          <Field\r\n            labelText=\"Пароль\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            placeholder=\"Пароль (подсказка - 1p222)\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n            onBlur={this.handleBlur}\r\n            error={errors.password}\r\n          />\r\n          <Field\r\n            labelText=\"Повторите пароль\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"repeatPassword\"\r\n            placeholder=\"Повторите пароль\"\r\n            name=\"repeatPassword\"\r\n            value={repeatPassword}\r\n            onChange={this.onChange}\r\n            onBlur={this.handleBlur}\r\n            error={errors.repeatPassword}\r\n          />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-lg btn-primary btn-block\"\r\n            onClick={this.onLogin}\r\n            disabled={submitting}\r\n          >\r\n            Вход\r\n          </button>\r\n          {errors.base && (\r\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n  const mapDispatchToProps = {\r\n      updateAuth\r\n  };\r\n\r\n  export default connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n    )(LoginForm);","import React from \"react\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal } from \"../../redux/auth/auth.actions\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    const {toggleModal, showModal} = this.props;\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          type=\"button\"\r\n          onClick={toggleModal}\r\n        >\r\n          Login\r\n        </button>\r\n        <Modal isOpen={showModal} toggle={toggleModal}>\r\n          <ModalBody>\r\n            <LoginForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showModal: state.auth.showModal\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleModal\r\n};\r\n\r\nexport default connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n        )(Login);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport CallApi from \"../../api/api\";\r\nimport { onLogOut } from \"../../redux/auth/auth.actions\"\r\n\r\nclass UserMenu extends React.Component {\r\n  state = {\r\n    dropdownOpen: false\r\n  };\r\n\r\n  toggleDropdown = () => {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  };\r\n\r\n  handleLogout = () => {\r\n    CallApi.logout(\"/authentication/session\", {\r\n      body: {\r\n        session_id: this.props.session_id\r\n      }\r\n    }).then(this.props.onLogOut());\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n        <DropdownToggle\r\n          tag=\"div\"\r\n          onClick={this.toggleDropdown}\r\n          data-toggle=\"dropdown\"\r\n          aria-expanded={this.state.dropdownOpen}\r\n        >\r\n          <img\r\n            className=\"rounded-circle\"\r\n            src={`https://secure.gravatar.com/avatar/${\r\n              user.avatar.gravatar.hash\r\n            }.jpg?s=64\"`}\r\n            alt=\"avatar\"\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={this.handleLogout}>Logout</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    session_id: state.auth.session_id\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onLogOut\r\n  \r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n  )(UserMenu);\r\n","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/react-moviedb\">\r\n                Home\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {this.props.user ? <UserMenu /> : <Login />}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.user\r\n  }\r\n}\r\n\r\nexport default connect (\r\n  mapStateToProps\r\n)(Header);","import * as types from \"./filters.types\";\r\n\r\nconst {\r\n  CHANGE_FILTER,\r\n  CHANGE_PAGINATION,\r\n  RESET_FILTERS,\r\n} = types;\r\n\r\nexport const onChangeFilter = payload => {\r\n    return {\r\n      type: CHANGE_FILTER,\r\n      payload\r\n    };\r\n  };\r\n\r\n  export const onChangePagination = payload => {\r\n    return {\r\n      type: CHANGE_PAGINATION,\r\n      payload\r\n    };\r\n  };\r\n\r\n  export const resetFilters = () => {\r\n    return {\r\n      type: RESET_FILTERS\r\n    };\r\n  };","export const CHANGE_FILTER = \"CHANGE_FILTER\";\r\nexport const CHANGE_PAGINATION = \"CHANGE_PAGINATION\";\r\nexport const RESET_FILTERS = \"RESET_FILTERS\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { onChangeFilter } from \"../../redux/filters/filters.actions\";\r\n\r\nclass SortBy extends React.PureComponent {\r\n  static propTypes = {\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n    sort_by: PropTypes.string.isRequired\r\n  };\r\n  static defaultProps = {\r\n    options: [\r\n      {\r\n        label: \"Popularity descending\",\r\n        value: \"popularity.desc\"\r\n      },\r\n      {\r\n        label: \"Popularity ascending\",\r\n        value: \"popularity.asc\"\r\n      },\r\n      {\r\n        label: \"Rating descending\",\r\n        value: \"vote_average.desc\"\r\n      },\r\n      {\r\n        label: \"Rating ascending\",\r\n        value: \"vote_average.asc\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  selectOptions = () => {\r\n    let arr = [];\r\n    for (let i = 2019; i >= 1900; i--) {\r\n      arr.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      filters: { sort_by, primary_release_year },\r\n      onChangeFilter,\r\n      options\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <h3>Filters</h3>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"sort_by\">Sort By</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"sort_by\"\r\n            id=\"sort_by\"\r\n            value={sort_by}\r\n            onChange={e => onChangeFilter(e)}\r\n          >\r\n            {options.map(option => {\r\n              return (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"primary_release_year\">Year of Release</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"primary_release_year\"\r\n            name=\"primary_release_year\"\r\n            value={primary_release_year}\r\n            onChange={onChangeFilter}\r\n          >\r\n            <option>Select year</option>\r\n            {this.selectOptions()}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filters: state.filters\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n    )(SortBy);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetFilters } from \"../../redux/filters/filters.actions\";\r\n\r\n\r\nclass ResetFilters extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-info\"\r\n          onClick={this.props.resetFilters}\r\n          style={{ width: \"180px\" }}\r\n        >\r\n          Reset All Filters\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    resetFilters\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(ResetFilters);\r\n","import React from \"react\";\r\nimport ResetFilters from \"./ResetFilters\";\r\nimport { connect } from \"react-redux\";\r\nimport { onChangePagination } from \"../../redux/filters/filters.actions\";\r\n\r\nclass Pagination extends React.Component {\r\n  \r\n  handleClick = value => () =>\r\n    this.props.onChangePagination({ name: \"page\", value: value });\r\n\r\n  render() {\r\n    const {\r\n      pagination: { page, totalPages }\r\n    } = this.props;\r\n   \r\n    return (\r\n      <div className=\"d-flex flex-column align-items-center\">\r\n        <p className=\"mb-1\">\r\n          Page {page} of {totalPages}\r\n        </p>\r\n        <div className=\"btn-group\" style={{ width: \"180px\" }}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            disabled={page === 1}\r\n            onClick={this.handleClick(page - 1)}\r\n            width=\"150px\"\r\n            name=\"page\"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            disabled={page === totalPages || page > totalPages}\r\n            onClick={this.handleClick(page + 1)}\r\n            name=\"page\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n        <div className=\"mt-1\">\r\n          <ResetFilters />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pagination: state.filters.pagination,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onChangePagination\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pagination);\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { onChangeFilter } from \"../../redux/filters/filters.actions\";\r\n\r\nfunction GenresHOC(Component) {\r\n  return class extends React.PureComponent {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        moviesGenres: []\r\n      };\r\n    }\r\n\r\n    onChangeGenres = e => {\r\n      const value = e.target.value;\r\n      const { with_genres } = this.props;\r\n      this.props.onChangeFilter({\r\n        target: {\r\n          name: \"with_genres\",\r\n          value: with_genres.includes(value)\r\n            ? with_genres.filter(item => item !== value)\r\n            : [...with_genres, value]\r\n        }\r\n      });\r\n    };\r\n\r\n    getMoviesGenres = () => {\r\n      CallApi.get(\"/genre/movie/list\", {\r\n        params: {\r\n          language: \"en-US\"\r\n        }\r\n      }).then(data => {\r\n        this.setState({\r\n          moviesGenres: data.genres\r\n        });\r\n      });\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.getMoviesGenres();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Component\r\n          moviesGenres={this.state.moviesGenres}\r\n          with_genres={this.props.with_genres}\r\n          onChangeGenres={this.onChangeGenres}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    with_genres: state.filters.sorting.with_genres\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter\r\n}\r\n\r\nconst composedHOC = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  GenresHOC\r\n);\r\n\r\nexport default composedHOC;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GenresHOC from \"./GenresHOC\";\r\n\r\nconst Genres = ({ moviesGenres, with_genres, onChangeGenres }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"mb-2\">Select Genres</p>\r\n      <div className=\"form-check\">\r\n        {moviesGenres.map(item => {\r\n          return (\r\n            <div key={item.id}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                checked={with_genres.includes(`${item.id}`)}\r\n                type=\"checkbox\"\r\n                id={item.id}\r\n                value={item.id}\r\n                name=\"with_genres\"\r\n                onChange={onChangeGenres}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor={item.id}>\r\n                {item.name}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGenres.propTypes = {\r\n  moviesGenres: PropTypes.array.isRequired\r\n};\r\n\r\nGenres.defaultProps = {\r\n  moviesGenres: []\r\n};\r\n\r\nexport default GenresHOC(Genres);\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy\";\r\nimport Pagination from \"./Pagination\";\r\nimport Genres from \"./Genres\";\r\n\r\nexport default class Filters extends React.Component {\r\n  render() {\r\n    return (\r\n      <form className=\"mb-3\">\r\n        <Pagination />\r\n        <SortBy />\r\n        <Genres />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport \"../../../node_modules/material-design-icons/iconfont/material-icons.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal } from \"../../redux/auth/auth.actions\";\r\n\r\nclass Like extends React.Component {\r\n  state = {\r\n    like: false\r\n  };\r\n\r\n  onToggleLike = () => {\r\n    if (!this.props.session_id) {\r\n      this.props.toggleModal();\r\n    } else {\r\n      this.setState(\r\n        prevState => ({\r\n          like: !prevState.like\r\n        }),\r\n        () => this.onLike(this.state.like)\r\n      );\r\n    }\r\n  };\r\n\r\n  onLike = likeState => {\r\n    const { session_id, movie } = this.props;\r\n    CallApi.post(\"/account/{account_id}/favorite\", {\r\n      params: {\r\n        session_id: session_id,\r\n        media_type: \"movie\",\r\n        media_id: movie.id,\r\n        favorite: likeState\r\n      }\r\n    }).then(data => {\r\n      console.log(data.status_message);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { like } = this.state;\r\n    return (\r\n      <i className=\"material-icons\" onClick={this.onToggleLike}>\r\n        {like ? \"star\" : \"star_border\"}\r\n      </i>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleModal\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Like);\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleModal } from \"../../redux/auth/auth.actions\";\r\n\r\nclass Bookmark extends React.Component {\r\n  state = {\r\n    bookmark: false\r\n  };\r\n\r\n  onToggleBookmark = () => {\r\n    if (!this.props.session_id) {\r\n      this.props.toggleModal();\r\n    } else {\r\n      this.setState(\r\n        prevState => ({\r\n          bookmark: !prevState.bookmark\r\n        }),\r\n        () => this.onBookmark(this.state.bookmark)\r\n      );\r\n    }\r\n  };\r\n\r\n  onBookmark = bookmarkState => {\r\n    const { session_id, movie } = this.props;\r\n    CallApi.post(\"/account/{account_id}/favorite\", {\r\n      params: {\r\n        session_id: session_id,\r\n        media_type: \"movie\",\r\n        media_id: movie.id,\r\n        favorite: bookmarkState\r\n      }\r\n    }).then(data => {\r\n      console.log(data.status_message);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { bookmark } = this.state;\r\n    return (\r\n      <i className=\"material-icons\" onClick={this.onToggleBookmark}>\r\n        {bookmark ? \"bookmark\" : \"bookmark_border\"}\r\n      </i>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleModal\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Bookmark);\r\n","import React from \"react\";\r\n\r\nexport default class MovieImage extends React.Component {\r\n  render() {\r\n    const { path } = this.props;\r\n    return (\r\n      <img\r\n        className=\"card-img-top\"\r\n        src={`https://image.tmdb.org/t/p/w500${path}`}\r\n        alt=\"\"\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Like from \"../../components/UI/Like\";\r\nimport Bookmark from \"../../components/UI/Bookmark\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MovieImage from \"../../components/UI/MovieImage\";\r\n\r\nexport default class MovieItem extends React.Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n\r\n    return (\r\n      <div className=\"card\" style={{ width: \"100%\" }}>\r\n        <MovieImage path={movie.backdrop_path || movie.poster_path} />\r\n        <div className=\"card-body\">\r\n          <Link className=\"card-title\" to={`/movie/${movie.id}/details`}>\r\n            {movie.title}\r\n          </Link>\r\n          <div className=\"card-text\">Rating: {movie.vote_average}</div>\r\n          <div className=\"mt-2\">\r\n            <Like movie={movie} />\r\n            <Bookmark movie={movie} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nexport default class Loader extends React.Component {\r\n  render() {\r\n    return <Spinner className=\"loader\" animation=\"border\" />;\r\n  }\r\n}\r\n","\r\nimport * as types from \"./loader.types\";\r\n\r\nconst {\r\n  TOGGLE_LOADER,\r\n  TOGGLE_LOADER_VIDEOS,\r\n  TOGGLE_LOADER_CREDITS\r\n} = types;\r\n\r\n\r\nexport const toggleLoader = () => {\r\n    return {\r\n      type: TOGGLE_LOADER\r\n    };\r\n  };\r\n  \r\n  export const toggleLoaderVideos = () => {\r\n    return {\r\n      type: TOGGLE_LOADER_VIDEOS\r\n    };\r\n  };\r\n  \r\n  export const toggleLoaderCredits = () => {\r\n    return {\r\n      type: TOGGLE_LOADER_CREDITS\r\n    };\r\n  };","export const TOGGLE_LOADER = \"TOGGLE_LOADER\";\r\nexport const TOGGLE_LOADER_VIDEOS = \"TOGGLE_LOADER_VIDEOS\";\r\nexport const TOGGLE_LOADER_CREDITS = \"TOGGLE_LOADER_CREDITS\";","import CallApi from \"../../api/api\";\r\nimport * as types from \"./movies.types\";\r\nimport { toggleLoader } from \"../loader/loader.actions\";\r\nimport { onChangePagination } from \"../filters/filters.actions\";\r\n\r\nexport const fetchMovies = params => dispatch => {\r\n  dispatch(toggleLoader());\r\n  return CallApi.get(\"/discover/movie\", {\r\n    params\r\n  }).then(data => {\r\n    dispatch(onChangePagination({ name: \"totalPages\", value: data.total_pages }));\r\n    dispatch(getMovies(data.results));\r\n    dispatch(toggleLoader());\r\n  });\r\n}\r\n\r\nexport const getMovies = payload => {\r\n  return {\r\n    type: types.GET_MOVIES,\r\n    payload\r\n  };\r\n};","export const GET_MOVIES = \"GET_MOVIES\";","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Loader from \"../../components/UI/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { fetchMovies } from \"../../redux/movies/movies.actions\";\r\nimport {  onChangePagination } from \"../../redux/filters/filters.actions\";\r\n\r\n\r\nfunction MoviesHOC(Component) {\r\n  return class extends React.Component {\r\n    componentDidMount() {\r\n      const {\r\n        sorting : { sort_by, primary_release_year, with_genres },\r\n        fetchMovies,\r\n        pagination: { page }\r\n      } = this.props;\r\n      \r\n      const queryStringParams = {\r\n        language: \"en-EN\",\r\n        sort_by: sort_by,\r\n        page: page,\r\n        primary_release_year: primary_release_year\r\n      };\r\n      if (with_genres.length > 0) {\r\n        queryStringParams.with_genres = with_genres.join(\",\");\r\n      }\r\n      fetchMovies(queryStringParams)\r\n    }\r\n\r\n    componentDidUpdate(state) {\r\n      const {\r\n        sorting,\r\n        sorting: { sort_by, primary_release_year, with_genres },\r\n        pagination: { page },\r\n        onChangePagination,\r\n        fetchMovies\r\n      } = this.props;\r\n      \r\n      const queryStringParams = {\r\n        language: \"en-EN\",\r\n        sort_by: sort_by,\r\n        page: page,\r\n        primary_release_year: primary_release_year\r\n      };\r\n      if (with_genres.length > 0) {\r\n        queryStringParams.with_genres = with_genres.join(\",\");\r\n      }\r\n      if (!_.isEqual(sorting, state.sorting)) {\r\n        onChangePagination({ name: \"page\", value: 1 });\r\n        return fetchMovies(queryStringParams);\r\n      } else if (page !== state.pagination.page) {\r\n        return fetchMovies(queryStringParams)\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { movies, isLoading } = this.props;\r\n      return (\r\n        <div className=\"container\">\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Component {...this.props} movies={movies} />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sorting: state.filters.sorting,\r\n    pagination: state.filters.pagination,\r\n    movies: state.movies.movies,\r\n    isLoading: state.loader.general\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onChangePagination,\r\n    fetchMovies\r\n};\r\n\r\nconst composedHOC = compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  MoviesHOC\r\n);\r\n\r\nexport default composedHOC;\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport MoviesHOC from \"./MoviesHOC\";\r\n\r\nconst MoviesList = ({ movies }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {movies.map(movie => {\r\n        return (\r\n          <div key={movie.id} className=\"col-6 mb-4\">\r\n            <MovieItem movie={movie} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: []\r\n};\r\nexport default MoviesHOC(MoviesList);\r\n","import React from \"react\";\r\nimport Filters from \"../../components/Filters/Filters\";\r\nimport MoviesList from \"./MoviesList\";\r\n\r\nexport default class MoviesPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-4\">\r\n            <div className=\"card\" style={{ width: \"100%\" }}>\r\n              <div className=\"card-body\">\r\n                <Filters />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <MoviesList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class MovieDetails extends React.Component {\r\n  formatNumber = number => {\r\n    return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n  };\r\n\r\n  renderCountries = countries => {\r\n    return countries.map((item, index) => (\r\n      <span key={index}>{item.name} </span>\r\n    ));\r\n  };\r\n\r\n  renderGenres = genres => {\r\n    return genres.map((item, index) => (\r\n      <p className=\"badge badge-warning mb-2\" key={index}>\r\n        {item.name}\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  renderCompanies = companies => {\r\n    return companies.map((item, index) => (\r\n      <p className=\"badge badge-info mb-2\" key={index}>\r\n        {item.name}{\" \"}\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      status,\r\n      release_date,\r\n      tagline,\r\n      production_countries,\r\n      budget,\r\n      revenue,\r\n      genres,\r\n      homepage,\r\n      runtime,\r\n      production_companies\r\n    } = this.props.movie;\r\n\r\n    const details = [\r\n      { title: \"Status\", data: status },\r\n      { title: \"Release Date\", data: release_date },\r\n      { title: \"Slogan\", data: tagline },\r\n      { title: \"Country\", data: production_countries },\r\n      { title: \"Budget\", data: budget },\r\n      { title: \"Revenue\", data: revenue },\r\n      { title: \"Genres\", data: genres },\r\n      { title: \"Homepage\", data: homepage },\r\n      { title: \"Runtime\", data: runtime },\r\n      { title: \"Company\", data: production_companies }\r\n    ];\r\n\r\n    return (\r\n      <Table className=\"mt-4\">\r\n        <tbody>\r\n          {details\r\n            .filter(item => {\r\n              if (typeof item.data === \"object\") {\r\n                return !_.isEmpty(item.data);\r\n              }\r\n              return item.data;\r\n            })\r\n            .map((item, index) => {\r\n              if (item.title === \"Budget\" || item.title === \"Revenue\") {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{item.title}</th>\r\n                    <td>{this.formatNumber(item.data)}</td>\r\n                  </tr>\r\n                );\r\n              }\r\n              if (item.title === \"Country\") {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{item.title}</th>\r\n                    <td>{this.renderCountries(item.data)}</td>\r\n                  </tr>\r\n                );\r\n              }\r\n              if (item.title === \"Genres\") {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{item.title}</th>\r\n                    <td className=\"d-flex flex-column align-items-start\">\r\n                      {this.renderGenres(item.data)}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n              if (item.title === \"Runtime\") {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{item.title}</th>\r\n                    <td>{item.data} minutes</td>\r\n                  </tr>\r\n                );\r\n              }\r\n              if (item.title === \"Company\") {\r\n                return (\r\n                  <tr key={index}>\r\n                    <th>{item.title}</th>\r\n                    <td className=\"d-flex flex-column align-items-start\">\r\n                      {this.renderCompanies(item.data)}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n              return (\r\n                <tr key={index}>\r\n                  <th>{item.title}</th>\r\n                  <td>{item.data}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport CallApi from \"../../api/api\";\r\nimport Loader from \"../../components/UI/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleLoaderVideos } from \"../../redux/loader/loader.actions\";\r\n\r\nclass MovieVideos extends React.Component {\r\n  state = {\r\n    videos: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { toggleLoaderVideos } = this.props;\r\n    toggleLoaderVideos();\r\n    CallApi.get(`/movie/${this.props.match.params.id}/videos`).then(response => {\r\n      this.setState({\r\n        videos: response.results\r\n      })\r\n    toggleLoaderVideos();\r\n    }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoadingVideos } = this.props;\r\n    const { videos } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        {isLoadingVideos ? (\r\n          <Loader />\r\n        ) : (\r\n          videos.map((item, index) => (\r\n            <iframe\r\n              key={index}\r\n              className=\"col-4 border-0 mt-2\"\r\n              title=\"video\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              allow=\"fullscreen\"\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingVideos: state.loader.videos\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleLoaderVideos\r\n};\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n  )(MovieVideos));","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport CallApi from \"../../api/api\";\r\nimport Loader from \"../../components/UI/Loader\";\r\nimport MovieImage from \"../../components/UI/MovieImage\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleLoaderCredits } from \"../../redux/loader/loader.actions\";\r\n\r\nclass MovieCredits extends React.Component {\r\n  state = {\r\n    credits: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { toggleLoaderCredits } = this.props;\r\n    toggleLoaderCredits();\r\n    CallApi.get(`/movie/${this.props.match.params.id}/credits`).then(\r\n      response => {\r\n        this.setState({\r\n          credits: response.cast\r\n        });\r\n    toggleLoaderCredits();\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoadingCredits } = this.props;\r\n    const { credits } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        {isLoadingCredits ? (\r\n          <Loader />\r\n        ) : (\r\n          credits.map((item, index) => (\r\n            <div className=\"col-md-2 mt-2\" key={index}>\r\n              <MovieImage path={item.profile_path} />\r\n              <span>\r\n                <b>{item.name}</b> / {item.character}\r\n              </span>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingCredits: state.loader.credits\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleLoaderCredits\r\n};\r\n\r\nexport default withRouter(connect(\r\n                mapStateToProps,\r\n                mapDispatchToProps\r\n                )(MovieCredits));\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Like from \"../../components/UI/Like\";\r\nimport Bookmark from \"../../components/UI/Bookmark\";\r\nimport MovieImage from \"../../components/UI/MovieImage\";\r\n\r\nclass MovieHeader extends React.Component {\r\n  render() {\r\n    const {\r\n      backdrop_path,\r\n      original_title,\r\n      overview,\r\n      release_date,\r\n      vote_average\r\n    } = this.props.movie;\r\n    const { movie } = this.props;\r\n    const release_year = `${release_date}`.split(\"-\")[0];\r\n    return (\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-4\">\r\n          <MovieImage path={backdrop_path} />\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <h5 className=\"title mb-4\">\r\n            {original_title} ({release_year})\r\n          </h5>\r\n          <Like movie={movie} />\r\n          <Bookmark movie={movie} />\r\n          <h6 className=\"\">Rating {vote_average}</h6>\r\n          <p className=\"mb-4\">{overview}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieHeader);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Nav, NavItem } from \"reactstrap\";\r\n\r\nclass MovieNavigation extends React.Component {\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink to={`/movie/${id}/details`} className=\"nav-link\">\r\n              Details\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to={`/movie/${id}/videos`} className=\"nav-link\">\r\n              Videos\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to={`/movie/${id}/credits`} className=\"nav-link\">\r\n              Credits\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieNavigation);\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport Loader from \"../../components/UI/Loader\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport MovieVideos from \"./MovieVideos\";\r\nimport MovieCredits from \"./MovieCredits\";\r\nimport MovieHeader from \"./MovieHeader\";\r\nimport MovieNavigation from \"./MovieNavigation\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleLoader } from \"../../redux/loader/loader.actions\";\r\n\r\nclass MoviePage extends React.Component {\r\n  state = {\r\n    movie: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { toggleLoader } = this.props;\r\n    console.log(this.props.match)\r\n    toggleLoader();\r\n    CallApi.get(`/movie/${this.props.match.params.id}`).then(response => {\r\n      this.setState({\r\n        movie: response\r\n      });\r\n      toggleLoader();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    const { movie } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"container\">\r\n            <Link to=\"/react-moviedb\">Back</Link>\r\n            <MovieHeader movie={movie} />\r\n            <MovieNavigation />\r\n            <Switch>\r\n              <Route path=\"/movie/:id/details\">\r\n                <MovieDetails movie={movie} />{\" \"}\r\n              </Route>\r\n              <Route path=\"/movie/:id/videos\">\r\n                <MovieVideos />{\" \"}\r\n              </Route>\r\n              <Route path=\"/movie/:id/credits\">\r\n                <MovieCredits />{\" \"}\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.loader.general\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleLoader\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MoviePage);\r\n","import React from \"react\";\r\nimport Header from \"./Header/Header\";\r\nimport MoviesPage from \"../pages/MoviesPage/MoviesPage\";\r\nimport MoviePage from \"../pages/MoviePage/MoviePage\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { updateLogin } from \"../redux/auth/auth.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    const {session_id} = this.props;\r\n    if(session_id) this.props.updateLogin(session_id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n          <Header />\r\n          <Route exact path=\"/react-moviedb\" component={MoviesPage} />\r\n          <Route path=\"/react-moviedb/movie/:id\" component={MoviePage} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    session_id: state.auth.session_id\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    updateLogin\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import * as types from \"./loader.types\";\r\n\r\nconst { TOGGLE_LOADER, TOGGLE_LOADER_VIDEOS, TOGGLE_LOADER_CREDITS } = types;\r\n\r\nconst initialState = {\r\n  general: false,\r\n  videos: false,\r\n  credits: false\r\n};\r\n\r\nconst loader = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_LOADER:\r\n      return toggleLoaderState(state, \"general\");\r\n    case TOGGLE_LOADER_VIDEOS:\r\n      return toggleLoaderState(state, \"videos\");\r\n    case TOGGLE_LOADER_CREDITS:\r\n      return toggleLoaderState(state, \"credits\");\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst toggleLoaderState = (state, loaderKey) => {\r\n  return {\r\n    ...state,\r\n    [loaderKey]: !state[loaderKey]\r\n  };\r\n};\r\n\r\nexport default loader;\r\n","import Cookies from \"universal-cookie\";\r\n\r\nexport const cookies = new Cookies();","import * as types from \"./auth.types\";\r\nimport { cookies } from \"../../utils/cookies\";\r\n\r\nconst { UPDATE_AUTH, LOGOUT, TOGGLE_MODAL } = types;\r\nconst initialState = {\r\n  user: null,\r\n  session_id: cookies.get(\"session_id\"),\r\n  showModal: false\r\n};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_AUTH:\r\n        return {\r\n          ...state,\r\n          user: action.payload.user,\r\n          session_id: action.payload.session_id\r\n        };\r\n    case LOGOUT:\r\n        return {\r\n          ...state,\r\n          user: null,\r\n          session_id: null\r\n        };\r\n    case TOGGLE_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: !state.showModal\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n\r\n","import * as types from \"./movies.types\";\r\n\r\nconst initialState = {\r\n  movies: []\r\n}\r\nconst movies = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_MOVIES:\r\n        return {\r\n          ...state,\r\n          movies: action.payload.slice()\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movies;\r\n\r\n\r\n\r\n// const movies = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case \"GET_MOVIES\":\r\n//         return (state = action.payload.slice())\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import * as types from \"./filters.types\";\r\n\r\nconst initialState = {\r\n  sorting: {\r\n    sort_by: \"popularity.desc\",\r\n  primary_release_year: \"\",\r\n  with_genres: []\r\n  },\r\n  pagination: {\r\n    page: 1,\r\n    totalPages: 500\r\n  }\r\n  \r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.CHANGE_FILTER:\r\n        return {\r\n          ...state,\r\n          sorting: {\r\n            ...state.sorting,\r\n            [action.payload.target.name]: action.payload.target.value\r\n          }\r\n        };\r\n\r\n    case types.CHANGE_PAGINATION:\r\n          return {\r\n            ...state,\r\n            pagination: {\r\n              ...state.pagination,\r\n              [action.payload.name]: action.payload.value\r\n            }\r\n          }\r\n           \r\n      case types.RESET_FILTERS:\r\n          return {\r\n            ...state,\r\n            ...initialState\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filters;\r\n","import { combineReducers } from \"redux\";\r\nimport loader from \"./loader/loader.reducer\";\r\nimport auth from \"./auth/auth.reducer\";\r\nimport movies from \"./movies/movies.reducer\";\r\nimport filters from \"./filters/filters.reducer\";\r\n\r\nconst reducerApp = combineReducers({\r\n  auth,\r\n  loader,\r\n  movies,\r\n  filters\r\n});\r\n\r\nexport default reducerApp;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducerApp from \"./rootReducer\";\r\nimport {cookies} from \"../utils/cookies\";\r\nimport { UPDATE_AUTH, LOGOUT } from \"../redux/auth/auth.types\";\r\n\r\nconst cookiesUpdate = store => next => action => {\r\n    if (action.type === UPDATE_AUTH) {\r\n        cookies.set(\"session_id\", action.payload.session_id, {\r\n            path: \"/\",\r\n            maxAge: 2592000\r\n          });\r\n    };\r\n    if (action.type === LOGOUT) {\r\n        cookies.remove(\"session_id\");\r\n    }\r\n    return next(action)\r\n}\r\n\r\nconst store = createStore(reducerApp, composeWithDevTools(applyMiddleware(thunk, cookiesUpdate)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./stylesheets/index.css\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n     document.getElementById('root')\r\n    );\r\n\r\n  \r\n\r\n\r\n\r\n"],"sourceRoot":""}